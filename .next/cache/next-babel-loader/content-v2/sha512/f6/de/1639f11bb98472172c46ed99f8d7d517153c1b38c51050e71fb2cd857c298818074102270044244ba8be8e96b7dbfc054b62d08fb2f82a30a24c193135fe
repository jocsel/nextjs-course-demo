{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\Documentos LAFISE\\\\Next\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/DELL/Documents/Documentos LAFISE/Next/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KAD7B;AAEI,IAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAF7B;AAGI,IAAA,OAAO,EAAGH,KAAK,CAACC,UAAN,CAAiBG,OAH/B;AAII,IAAA,WAAW,EAAGJ,KAAK,CAACC,UAAN,CAAiBI;AAJnC;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQN,a;;AAuDT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails(props){\r\n    return(\r\n        <MeetupDetail\r\n            image= {props.meetupData.image}\r\n            title= {props.meetupData.title}\r\n            address= {props.meetupData.address}\r\n            description= {props.meetupData.description}\r\n        />\r\n    );\r\n}\r\nexport async function getStaticPaths(){\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://jocsel:jocsel@cluster0.2crxo.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n  client.close();\r\n  return{\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context){\r\n    //fetch data for a single meetup\r\n    const meetupId = context.params.meetupId;\r\n    console.log('meetupId', meetupId);\r\n    const client = await MongoClient.connect(\r\n      'mongodb+srv://jocsel:jocsel@cluster0.2crxo.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n  \r\n    const meetupsCollection = db.collection('meetups');\r\n    const selectMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId),\r\n    });\r\n    console.log('selectMeetup', selectMeetup);\r\n\r\n    client.close();\r\n    return{\r\n        props:{\r\n            meetupData: {\r\n              id: selectMeetup._id.toString(),\r\n              title: selectMeetup.title,\r\n              description: selectMeetup.description,\r\n              address: selectMeetup.address,\r\n              image: selectMeetup.image,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}